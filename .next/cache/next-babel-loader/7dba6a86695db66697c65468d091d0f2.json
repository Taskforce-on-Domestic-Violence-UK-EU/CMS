{"ast":null,"code":"/* This is a database connection function*/\nimport mongoose from \"mongoose\";\nconst connection = {};\n/* creating connection object*/\n\nasync function dbConnect() {\n  /* check if we have connection to our databse*/\n  if (connection.isConnected) {\n    return;\n  }\n  /* connecting to our database */\n\n\n  const db = await mongoose.connect(\"mongodb+srv://\" + process.env.MONGODB_USERNAME + \":\" + process.env.MONGODB_PASSWORD + \"@assets.kpfjo.mongodb.net/<dbname>?retryWrites=true&w=majority\", {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    useFindAndModify: false\n  });\n  connection.isConnected = db.connections[0].readyState;\n}\n\nexport default dbConnect;","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/CMS/utils/dbConnect.js"],"names":["mongoose","connection","dbConnect","isConnected","db","connect","process","env","MONGODB_USERNAME","MONGODB_PASSWORD","useNewUrlParser","useUnifiedTopology","useFindAndModify","connections","readyState"],"mappings":"AAAA;AACA,OAAOA,QAAP,MAAqB,UAArB;AAEA,MAAMC,UAAU,GAAG,EAAnB;AAAuB;;AAEvB,eAAeC,SAAf,GAA2B;AACzB;AACA,MAAID,UAAU,CAACE,WAAf,EAA4B;AAC1B;AACD;AAED;;;AACA,QAAMC,EAAE,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CACf,mBACEC,OAAO,CAACC,GAAR,CAAYC,gBADd,GAEE,GAFF,GAGEF,OAAO,CAACC,GAAR,CAAYE,gBAHd,GAIE,gEALa,EAMf;AACEC,IAAAA,eAAe,EAAE,IADnB;AAEEC,IAAAA,kBAAkB,EAAE,IAFtB;AAGEC,IAAAA,gBAAgB,EAAE;AAHpB,GANe,CAAjB;AAaAX,EAAAA,UAAU,CAACE,WAAX,GAAyBC,EAAE,CAACS,WAAH,CAAe,CAAf,EAAkBC,UAA3C;AACD;;AAED,eAAeZ,SAAf","sourcesContent":["/* This is a database connection function*/\nimport mongoose from \"mongoose\";\n\nconst connection = {}; /* creating connection object*/\n\nasync function dbConnect() {\n  /* check if we have connection to our databse*/\n  if (connection.isConnected) {\n    return;\n  }\n\n  /* connecting to our database */\n  const db = await mongoose.connect(\n    \"mongodb+srv://\" +\n      process.env.MONGODB_USERNAME +\n      \":\" +\n      process.env.MONGODB_PASSWORD +\n      \"@assets.kpfjo.mongodb.net/<dbname>?retryWrites=true&w=majority\",\n    {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useFindAndModify: false,\n    }\n  );\n\n  connection.isConnected = db.connections[0].readyState;\n}\n\nexport default dbConnect;\n"]},"metadata":{},"sourceType":"module"}