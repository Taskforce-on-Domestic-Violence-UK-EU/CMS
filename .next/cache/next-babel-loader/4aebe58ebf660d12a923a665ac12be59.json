{"ast":null,"code":"export default (async (req, res) => {\n  const {\n    query: {\n      id\n    },\n    method,\n    body\n  } = req;\n\n  switch (method) {\n    case \"PUT\":\n      if (method === \"PUT\") {\n        try {\n          const article = await updateArticle(id, body);\n          res.status(200).json({\n            status: \"success\",\n            data: article\n          });\n        } catch (error) {\n          res.status(500).json({\n            status: \"error\",\n            message: error.message\n          });\n        }\n\n        break;\n      }\n\n    case \"GET\":\n      try {\n        console.log(req);\n        res.status(200).json({\n          status: \"success\",\n          data: \"hey it worked\"\n        });\n      } catch (error) {\n        res.status(400).json({\n          status: \"error\",\n          message: error.message\n        });\n      }\n\n      break;\n\n    case \"DELETE\":\n      try {\n        await Article.deleteOne({\n          _id: id\n        });\n        res.status(200).json({\n          status: \"success\",\n          data: null\n        });\n      } catch (error) {\n        res.status(400).json({\n          status: \"error\",\n          message: error.message\n        });\n      }\n\n      break;\n\n    default:\n      res.status(500).json({\n        status: \"error\",\n        message: \"Default error occured, this is most likey since the request `method` was not handled or unspecified\"\n      });\n      break;\n  }\n});","map":{"version":3,"sources":["/Users/dalyanparker/Programming/Applications/CMS/pages/api/index.js"],"names":["req","res","query","id","method","body","article","updateArticle","status","json","data","error","message","console","log","Article","deleteOne","_id"],"mappings":"AAAA,gBAAe,OAAOA,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADH;AAEJC,IAAAA,MAFI;AAGJC,IAAAA;AAHI,MAIFL,GAJJ;;AAMA,UAAQI,MAAR;AACE,SAAK,KAAL;AACE,UAAIA,MAAM,KAAK,KAAf,EAAsB;AACpB,YAAI;AACF,gBAAME,OAAO,GAAG,MAAMC,aAAa,CAACJ,EAAD,EAAKE,IAAL,CAAnC;AACAJ,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,YAAAA,MAAM,EAAE,SADW;AAEnBE,YAAAA,IAAI,EAAEJ;AAFa,WAArB;AAID,SAND,CAME,OAAOK,KAAP,EAAc;AACdV,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,YAAAA,MAAM,EAAE,OADW;AAEnBI,YAAAA,OAAO,EAAED,KAAK,CAACC;AAFI,WAArB;AAID;;AACD;AACD;;AAEH,SAAK,KAAL;AACE,UAAI;AACFC,QAAAA,OAAO,CAACC,GAAR,CAAYd,GAAZ;AACAC,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,SAAV;AAAqBE,UAAAA,IAAI,EAAE;AAA3B,SAArB;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdV,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,OAAV;AAAmBI,UAAAA,OAAO,EAAED,KAAK,CAACC;AAAlC,SAArB;AACD;;AACD;;AAEF,SAAK,QAAL;AACE,UAAI;AACF,cAAMG,OAAO,CAACC,SAAR,CAAkB;AAAEC,UAAAA,GAAG,EAAEd;AAAP,SAAlB,CAAN;AACAF,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,SAAV;AAAqBE,UAAAA,IAAI,EAAE;AAA3B,SAArB;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdV,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,OAAV;AAAmBI,UAAAA,OAAO,EAAED,KAAK,CAACC;AAAlC,SAArB;AACD;;AACD;;AAEF;AACEX,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,QAAAA,MAAM,EAAE,OADW;AAEnBI,QAAAA,OAAO,EACL;AAHiB,OAArB;AAKA;AA1CJ;AA4CD,CAnDD","sourcesContent":["export default async (req, res) => {\n  const {\n    query: { id },\n    method,\n    body,\n  } = req;\n\n  switch (method) {\n    case \"PUT\":\n      if (method === \"PUT\") {\n        try {\n          const article = await updateArticle(id, body);\n          res.status(200).json({\n            status: \"success\",\n            data: article,\n          });\n        } catch (error) {\n          res.status(500).json({\n            status: \"error\",\n            message: error.message,\n          });\n        }\n        break;\n      }\n\n    case \"GET\":\n      try {\n        console.log(req);\n        res.status(200).json({ status: \"success\", data: \"hey it worked\" });\n      } catch (error) {\n        res.status(400).json({ status: \"error\", message: error.message });\n      }\n      break;\n\n    case \"DELETE\":\n      try {\n        await Article.deleteOne({ _id: id });\n        res.status(200).json({ status: \"success\", data: null });\n      } catch (error) {\n        res.status(400).json({ status: \"error\", message: error.message });\n      }\n      break;\n\n    default:\n      res.status(500).json({\n        status: \"error\",\n        message:\n          \"Default error occured, this is most likey since the request `method` was not handled or unspecified\",\n      });\n      break;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}